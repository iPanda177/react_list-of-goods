{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","sortAlphabet","setState","sortLength","reverseItems","resetList","this","reorderedGoods","goods","visibleGoods","sort","item1","item2","localeCompare","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAU,GAHd,EAMEC,aAAe,WACb,EAAKC,SAAS,CAAEF,SAAU,KAP9B,EAUEG,WAAa,WACX,EAAKD,SAAS,CAAEF,SAAU,KAX9B,EAcEI,aAAe,WACb,EAAKF,UAAS,SAAAJ,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBEM,UAAY,WACV,EAAKH,SAAS,CACZH,YAAY,EACZC,SAAU,KAvBhB,4CA2BE,WACE,MAAiCM,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdO,EA5DH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAENU,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQZ,GACN,KAAK,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAK,EACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITf,EACKU,EAAaM,UAGfN,EAqCkBO,CACrBpB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAyB,IAAbnB,IAEhBoB,QAASd,KAAKL,aANhB,iCAWA,wBACEiB,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAyB,IAAbnB,IAEhBoB,QAASd,KAAKH,WANhB,4BAWA,wBACEe,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,YAAapB,IAEjBqB,QAASd,KAAKF,aANhB,sBAWEL,GAA2B,IAAbC,IAEZ,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,UAHhB,sBAWN,6BACE,6BACGE,EAAec,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAtFtC,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b36b4309.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((item1, item2) => {\n    switch (sortType) {\n      case 1:\n        return item1.localeCompare(item2);\n\n      case 2:\n        return item1.length - item2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  sortAlphabet = () => {\n    this.setState({ sortType: 1 });\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: 2 });\n  };\n\n  reverseItems = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetList = () => {\n    this.setState({\n      isReversed: false,\n      sortType: 0,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const reorderedGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== 1 },\n            )}\n            onClick={this.sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== 2 },\n            )}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverseItems}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== 0)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.resetList}\n              >\n                Reset\n              </button>\n            )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {reorderedGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}